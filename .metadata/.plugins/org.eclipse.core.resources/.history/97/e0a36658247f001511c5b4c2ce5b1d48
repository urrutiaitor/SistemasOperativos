package blancanieves;

import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Mesa {

	int silla[];
	boolean servidos[];
	
	Lock candadoMesa;
	Condition colaEnanitosFuera;
	Condition colaEnanitosDentro;
	Condition colaBN;
	
	public Mesa(int numSillas) {
		super();
		
		silla = new int[numSillas];
		servidos = new boolean[numSillas];
		
		candadoMesa = new ReentrantLock();
		colaEnanitosFuera = candadoMesa.newCondition();
		colaEnanitosDentro = candadoMesa.newCondition();
	}

	public void pasear() {
		try {
			candadoMesa.lock();
			colaBN.await();
			candadoMesa.unlock();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void servir(int posicion) {
		candadoMesa.lock();
		
		servidos[posicion] = true;
		System.out.println("Blancanieves sirve comida en posicion " + posicion + " a enanito " + silla[posicion]);
		colaEnanitosDentro.signalAll();
		
		candadoMesa.unlock();
	}


	public int encontrarComensal() {
		
		candadoMesa.lock();
		
		for (int i = 0; i < silla.length; i++) {
			if (silla[i] != -1) {
				candadoMesa.unlock();
				return i;
			}
		}
		
		candadoMesa.unlock();
		return -1;
	}

	
	public int encontrarAsiento(int id) {
		candadoMesa.lock();
		for (int i = 0; i < silla.length; i++) {
			if (silla[i] == -1) {
				silla[i] = id;
				candadoMesa.unlock();
				return i;
			}
		}
		candadoMesa.unlock();
		return -1;
	}

	public void esperarFuera() {
		candadoMesa.lock();
		try {
			colaEnanitosFuera.await();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		candadoMesa.unlock();
	}

	public void sentarse(int id, int posicion) {
		// TODO Auto-generated method stub
		
	}

	public void comer(int posicion) {
		// TODO Auto-generated method stub
		
	}

}
