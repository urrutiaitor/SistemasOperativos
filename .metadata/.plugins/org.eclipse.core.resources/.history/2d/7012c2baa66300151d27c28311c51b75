package itv;

import java.util.concurrent.Semaphore;

public class Aparcamiento {

	int numCochesParking;
	int numCochesInspeccion;
	
	int numCochesMaximo;
	int numInspeccionesMaximo;
	
	Semaphore semaforoAparcamiento;
	Semaphore semaforoInspeccion;
	
	Semaphore candadoAparcamiento;
	
	public Aparcamiento(int numCochesParking, int numCochesInspeccion, int numCochesMaximo, int numInspeccionesMaximo) {
		super();
		this.numCochesParking = numCochesParking;
		this.numCochesInspeccion = numCochesInspeccion;
		this.numCochesMaximo = numCochesMaximo;
		this.numInspeccionesMaximo = numInspeccionesMaximo;
		
		semaforoAparcamiento = new Semaphore(numCochesMaximo);
		semaforoInspeccion = new Semaphore(numInspeccionesMaximo);
		
		candadoAparcamiento = new Semaphore(1);
	}

	public void inspeccionarCoche(){
		
	}
	
	public void aparcarCoche() throws InterruptedException{
		if(semaforoAparcamiento.tryAcquire()){
			candadoAparcamiento.acquire();
			numCochesParking++;
			candadoAparcamiento.release();
			
		} else {
			System.out.println("Aparcamiento lleno");
			return;
		}
	}
}
