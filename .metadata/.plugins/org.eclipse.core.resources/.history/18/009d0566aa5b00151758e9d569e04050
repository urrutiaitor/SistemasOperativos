package BufferSincronizadoAlmacenado;

import java.util.concurrent.Semaphore;

public class Buffer {

	int numeros[];
	Semaphore lleno;
	Semaphore vacio;
	int indiceSalida;
	int indiceEntrada;
	final int valoresMax = 10;

	public Buffer(Semaphore lleno, Semaphore vacio) {
		numeros = new int[valoresMax];
		this.lleno = lleno;
		this.vacio = vacio;
		indiceSalida = 0;
		indiceEntrada = 0;
	}

	public int getNumero() {
		/*
		try {
			barreraEscrito.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		barreraLeido.release();
		
		System.out.println("Numero leido: " + numero);
		*/
		try {
			vacio.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int numero = numeros[indiceSalida++%valoresMax];
		lleno.release();
		
		System.out.println("Numero leido: " + numero);
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return numero;
		/*
		 * vacio.acquire();
		 * valor = valores[indSal++%maxVal];
		 * lleno.release;
		 */
		
	}

	public void setNumero(int numero) {
		/*
		try {
			barreraLeido.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.numero = numero;
		System.out.println("Numero escrito: " + numero);
		barreraEscrito.release();
		*/
		
		try {
			lleno.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		numeros[indiceEntrada++%valoresMax] = numero;
		vacio.release();
		
		System.out.println("Numero escrito: " + numero);
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		/*
		 * lleno.acquire();
		 * valores[indEntr++%macVal] = valor;
		 * vacio.release();
		 */
		
	}
	
}
