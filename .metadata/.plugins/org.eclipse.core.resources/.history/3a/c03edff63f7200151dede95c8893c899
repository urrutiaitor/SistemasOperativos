package itv;

import java.util.concurrent.Semaphore;

public class Aparcamiento {

	int numCochesParking;
	int numCochesInspeccion;
	
	int numCochesMaximo;
	int numInspeccionesMaximo;
	
	BuzonAsincrono<Integer> buzonAparcamiento;
	BuzonAsincrono<Integer> buzonInspeccion;
	BuzonAsincrono<Integer> buzonFinal;
	
	
	Semaphore candadoAparcamiento;
	Semaphore candadoOperario;
	
	public Aparcamiento(int numCochesParking, int numCochesInspeccion, int numCochesMaximo, int numInspeccionesMaximo) {
		super();
		this.numCochesParking = numCochesParking;
		this.numCochesInspeccion = numCochesInspeccion;
		this.numCochesMaximo = numCochesMaximo;
		this.numInspeccionesMaximo = numInspeccionesMaximo;
		
		buzonAparcamiento = new BuzonAsincrono<Integer>(numCochesMaximo);
		buzonInspeccion = new BuzonAsincrono<Integer>(numInspeccionesMaximo);
		
		candadoAparcamiento = new Semaphore(1);
		candadoOperario = new Semaphore(0);
		
		for(int i = 0; i < numCochesMaximo; i++){
			try {
				buzonAparcamiento.send(i+1);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	public void inspeccionarCoche() throws InterruptedException{
		int sitioAparcamiento = buzonInspeccion.recieve();
		
		int sitioInspeccion = buzonFinal.recieve();
		buzonFinal.send(sitioInspeccion);
		
		System.out.println("Coche inspeccionado en sitio " + sitioInspeccion);
		
		buzonAparcamiento.send(sitioAparcamiento);
		
		
	}
	
	public void aparcarCoche() throws InterruptedException{
		int sitioAparcamiento = buzonAparcamiento.recieve();
		System.out.println("Coche aparcado en sitio " + sitioAparcamiento);
		buzonInspeccion.send(sitioAparcamiento);
	}
}
