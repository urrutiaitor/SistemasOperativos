package BufferSincronizadoAlmacenado;

import java.util.concurrent.Semaphore;

public class Buffer {

	int numeros[];
	Semaphore escribir;
	Semaphore leer;
	int indiceLeer;
	int indiceEscribir;
	final int valoresMax = 10;

	public Buffer(Semaphore escribir, Semaphore leer) {
		numeros = new int[valoresMax];
		this.escribir = escribir;
		this.leer = leer;
		indiceLeer = 0;
		indiceEscribir = 0;
	}

	public int getNumero() {
		
		try {
			leer.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int numero = numeros[indiceLeer++%valoresMax];
		escribir.release();
		
		System.out.println("Numero leido: " + numero);
		
		esperar(1000);
		
		return numero;
		
	}

	public void setNumero(int numero) {
		
		try {
			escribir.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		numeros[indiceEscribir++%valoresMax] = numero;
		leer.release();
		
		System.out.println("Numero escrito: " + numero);
		
		esperar(500);
		
	}
	
	public void esperar(int tiemp){
		try {
			Thread.sleep(tiempo);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
}
