package Inicial;

import java.util.concurrent.Semaphore;

public class Trabajador extends Thread {

	Semaphore semaforo;
	Trabajo trabajo;
	
	public Trabajador(Semaphore semaforo, Trabajo trabajo) {
		super();
		this.semaforo = semaforo;
		this.trabajo = trabajo;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		super.run();
		
		long a = 0;
		
		for(int i = 0; i < 100000; i++){
			for(int y = 0; y < 100000; y++){
				a = a + y;
			}
		}
		System.out.println("Trabajo terminado");
		try {
			semaforo.acquire();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if(trabajo.aÃ±adirTrabajo()){
			semaforo.release(trabajo.getLimite());
		}
		System.out.println("Hi!" + this.toString());
	}

	
	
	
}
